// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH);

    RAM64(in=in, load=outA, address=address[0..5], out=outA1);
    RAM64(in=in, load=outB, address=address[0..5], out=outB1);
    RAM64(in=in, load=outC, address=address[0..5], out=outC1);
    RAM64(in=in, load=outD, address=address[0..5], out=outD1);
    RAM64(in=in, load=outE, address=address[0..5], out=outE1);
    RAM64(in=in, load=outF, address=address[0..5], out=outF1);
    RAM64(in=in, load=outG, address=address[0..5], out=outG1);
    RAM64(in=in, load=outH, address=address[0..5], out=outH1);

    Mux8Way16(a=outA1, b=outB1, c=outC1, d=outD1, e=outE1, f=outF1, g=outG1, h=outH1, sel=address[6..8], out=out);
}